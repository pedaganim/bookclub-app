name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookclub-app/backend

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./bookclub-app/backend/package-lock.json
    
    - name: Install backend dependencies
      run: npm ci
    
    - name: Run backend tests with coverage
      run: npm run test:coverage

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookclub-app/frontend

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./bookclub-app/frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Run frontend unit tests
      run: npm test -- --watchAll=false --coverage
      env:
        CI: true

  e2e-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookclub-app

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          ./bookclub-app/frontend/package-lock.json
          ./bookclub-app/backend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./bookclub-app/frontend
      run: npm ci
    
    - name: Install backend dependencies
      working-directory: ./bookclub-app/backend
      run: npm ci
    
    - name: Install Playwright browsers
      working-directory: ./bookclub-app/frontend
      run: npx playwright install chromium --with-deps
    
    - name: Build frontend
      working-directory: ./bookclub-app/frontend
      run: npm run build
    
    - name: Start backend server
      working-directory: ./bookclub-app/backend
      run: |
        npm run offline &
        sleep 5
      env:
        IS_OFFLINE: true
        GOOGLE_CLIENT_ID: test_client_id
        GOOGLE_CLIENT_SECRET: test_client_secret
    
    - name: Start frontend server
      working-directory: ./bookclub-app/frontend
      run: |
        npm start &
        sleep 10
      env:
        CI: true
    
    - name: Run E2E tests
      working-directory: ./bookclub-app/frontend
      run: npm run test:e2e
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: ./bookclub-app/frontend/playwright-report/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    # Only run security scan on main branch pushes to save time on PRs
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Run npm audit on backend
      working-directory: ./bookclub-app/backend
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Run npm audit on frontend
      working-directory: ./bookclub-app/frontend
      run: npm audit --audit-level=moderate
      continue-on-error: true

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install frontend dependencies
      working-directory: ./bookclub-app/frontend
      run: npm ci
    
    - name: Check TypeScript types
      working-directory: ./bookclub-app/frontend
      run: npx tsc --noEmit
    
    - name: Run ESLint (if configured)
      working-directory: ./bookclub-app/frontend
      run: npm run lint || echo "ESLint not configured"
      continue-on-error: true