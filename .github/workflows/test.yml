name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    # Run tests on PR creation and whenever code updates happen, as well as key review lifecycle events
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - assigned
      - review_requested

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookclub-app/backend

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./bookclub-app/backend/package-lock.json
    
    - name: Install backend dependencies
      run: npm ci
    
    - name: Run backend tests with coverage
      run: npm run test:coverage
    
    - name: Upload backend coverage to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage
        path: ./bookclub-app/backend/coverage/

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookclub-app/frontend

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./bookclub-app/frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Run frontend unit tests
      run: npm test -- --watchAll=false --coverage
      env:
        CI: true
    
    - name: Upload frontend coverage to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: ./bookclub-app/frontend/coverage/



  security-scan:
    runs-on: ubuntu-latest
    # Run security scan on all PRs and main branch pushes
    steps:
    - uses: actions/checkout@v4
    
    # NOTE: Temporarily ignoring devDependencies in npm audit to avoid CRA toolchain advisories.
    #       We'll re-enable full audit after migrating frontend build tooling (e.g., to Vite).
    - name: Run npm audit on backend (prod deps only)
      working-directory: ./bookclub-app/backend
      run: npm audit --omit=dev --audit-level=moderate
      continue-on-error: true
    
    - name: Run npm audit on frontend (prod deps only)
      working-directory: ./bookclub-app/frontend
      run: npm audit --omit=dev --audit-level=moderate
      continue-on-error: true

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install frontend dependencies
      working-directory: ./bookclub-app/frontend
      run: npm ci
    
    - name: Check TypeScript types
      working-directory: ./bookclub-app/frontend
      run: npx tsc --noEmit
    
    - name: Run ESLint (if configured)
      working-directory: ./bookclub-app/frontend
      run: npm run lint

  quality-gate:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan, lint-and-format]
    steps:
    - name: Quality gate passed
      run: echo "All quality checks passed successfully!"