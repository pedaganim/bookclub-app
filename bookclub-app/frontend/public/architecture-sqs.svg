<?xml version="1.0" encoding="UTF-8"?>
<svg width="1280" height="780" viewBox="0 0 1280 780" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="SQS-driven Bedrock analyzer architecture">
  <defs>
    <style>
      .title { font: 700 22px Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial; fill: #111827; }
      .label { font: 600 14px Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial; fill: #111827; }
      .small { font: 500 12px Inter, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial; fill: #374151; }
      .box { rx: 14; ry: 14; filter: drop-shadow(0 2px 6px rgba(0,0,0,0.08)); }
      .arrow { marker-end: url(#arrowHead); }
    </style>
    <linearGradient id="bgGrad" x1="0" y1="0" x2="0" y2="1">
      <stop offset="0%" stop-color="#f8fafc"/>
      <stop offset="100%" stop-color="#eef2ff"/>
    </linearGradient>
    <marker id="arrowHead" viewBox="0 0 10 10" refX="9" refY="5" markerWidth="8" markerHeight="8" orient="auto-start-reverse">
      <path d="M0,0 L10,5 L0,10 z" fill="#6b7280" />
    </marker>
  </defs>

  <rect x="0" y="0" width="1280" height="780" fill="url(#bgGrad)"/>
  <text class="title" x="40" y="50">New Flow: SQS-driven Bedrock Analyzer (Colorful AWS-style)</text>

  <!-- Legend -->
  <g transform="translate(980,24)">
    <rect class="box" x="0" y="0" width="280" height="220" fill="#ffffff" stroke="#e5e7eb"/>
    <text class="label" x="16" y="28">Legend</text>
    <!-- Row 1 -->
    <g transform="translate(16,44)">
      <image href="/icons/aws-api-gateway.svg" x="0" y="-4" width="24" height="24"/>
      <text class="small" x="32" y="12">Amazon API Gateway</text>
    </g>
    <g transform="translate(16,70)">
      <image href="/icons/aws-lambda.svg" x="0" y="-4" width="24" height="24"/>
      <text class="small" x="32" y="12">AWS Lambda</text>
    </g>
    <!-- Row 2 -->
    <g transform="translate(16,100)">
      <image href="/icons/aws-s3.svg" x="0" y="-4" width="24" height="24"/>
      <text class="small" x="32" y="10">Amazon S3</text>
    </g>
    <g transform="translate(16,126)">
      <image href="/icons/aws-sqs.svg" x="0" y="-4" width="24" height="24"/>
      <text class="small" x="32" y="10">Amazon SQS</text>
    </g>
    <!-- Row 3 -->
    <g transform="translate(16,156)">
      <image href="/icons/aws-dynamodb.svg" x="0" y="-4" width="24" height="24"/>
      <text class="small" x="32" y="12">Amazon DynamoDB</text>
    </g>
    <g transform="translate(16,186)">
      <image href="/icons/aws-bedrock.svg" x="0" y="-4" width="24" height="24"/>
      <text class="small" x="32" y="10">Amazon Bedrock</text>
    </g>
  </g>

  <!-- Row 1: Client and API -->
  <g transform="translate(40,100)">
    <rect class="box" width="220" height="90" fill="#dbeafe" stroke="#93c5fd"/>
    <text class="label" x="16" y="36">Web App (React)</text>
    <text class="small" x="16" y="58">AddBookModal.tsx</text>
    <text class="small" x="16" y="76">Adaptive pacing</text>
  </g>
  <g transform="translate(320,100)">
    <rect class="box" width="240" height="90" fill="#fde68a" stroke="#fbbf24"/>
    <image href="/icons/aws-api-gateway.svg" x="16" y="10" width="36" height="36"/>
    <text class="label" x="66" y="36">API Gateway (HTTP)</text>
    <text class="small" x="16" y="58">/upload-url, /books, /analyze-cover</text>
  </g>

  <!-- Row 2: Storage & Events -->
  <g transform="translate(40,240)">
    <rect class="box" width="240" height="100" fill="#86efac" stroke="#22c55e"/>
    <image href="/icons/aws-s3.svg" x="16" y="18" width="36" height="36"/>
    <text class="label" x="66" y="36">Amazon S3</text>
    <text class="small" x="16" y="58">book-covers/<tspan font-weight="700">userId</tspan>/...</text>
    <text class="small" x="16" y="76">ObjectCreated events</text>
  </g>
  <g transform="translate(320,240)">
    <rect class="box" width="300" height="100" fill="#fee2e2" stroke="#fca5a5"/>
    <text class="label" x="16" y="36">EventBridge</text>
    <text class="small" x="16" y="58">S3.ObjectCreated → book-cover-uploaded</text>
  </g>

  <!-- Row 3: Lambda producers -->
  <g transform="translate(40,400)">
    <rect class="box" width="300" height="110" fill="#fed7aa" stroke="#f59e0b"/>
    <image href="/icons/aws-lambda.svg" x="16" y="20" width="36" height="36"/>
    <text class="label" x="66" y="36">Lambda: processImageUpload</text>
    <text class="small" x="16" y="58">Creates minimal book</text>
    <text class="small" x="16" y="76">Publishes EventBridge</text>
    <text class="small" x="16" y="94">Enqueues Bedrock analyze (SQS)</text>
  </g>
  <g transform="translate(380,400)">
    <rect class="box" width="300" height="110" fill="#fee2e2" stroke="#ef4444"/>
    <image href="/icons/aws-lambda.svg" x="16" y="20" width="36" height="36"/>
    <text class="label" x="66" y="36">Lambda: bedrockAnalyzeCover (HTTP)</text>
    <text class="small" x="16" y="58">Optional direct invoke</text>
    <text class="small" x="16" y="76">Pre-delay + jitter</text>
  </g>

  <!-- Row 4: Queue & Worker -->
  <g transform="translate(740,380)">
    <rect class="box" width="250" height="120" fill="#fcd34d" stroke="#f59e0b"/>
    <image href="/icons/aws-sqs.svg" x="16" y="22" width="36" height="36"/>
    <text class="label" x="66" y="36">Amazon SQS</text>
    <text class="small" x="16" y="58">BedrockAnalyzeQueue</text>
    <text class="small" x="16" y="76">DLQ for failures</text>
  </g>
  <g transform="translate(1020,380)">
    <rect class="box" width="220" height="120" fill="#fde68a" stroke="#f59e0b"/>
    <image href="/icons/aws-lambda.svg" x="16" y="22" width="36" height="36"/>
    <text class="label" x="66" y="36">Lambda: bedrockAnalyzeWorker</text>
    <text class="small" x="16" y="58">batchSize=1, maxConc=2</text>
    <text class="small" x="16" y="76">Pre-delay + backoff</text>
  </g>

  <!-- Row 5: AI & Data -->
  <g transform="translate(740,560)">
    <rect class="box" width="240" height="110" fill="#e9d5ff" stroke="#a78bfa"/>
    <image href="/icons/aws-bedrock.svg" x="16" y="22" width="36" height="36"/>
    <text class="label" x="66" y="36">Amazon Bedrock (Claude)</text>
    <text class="small" x="16" y="58">Model configurable</text>
  </g>
  <g transform="translate(1000,560)">
    <rect class="box" width="240" height="110" fill="#bfdbfe" stroke="#60a5fa"/>
    <image href="/icons/aws-dynamodb.svg" x="16" y="22" width="36" height="36"/>
    <text class="label" x="66" y="36">Amazon DynamoDB</text>
    <text class="small" x="16" y="58">Books + metadata-cache</text>
  </g>

  <!-- Arrows -->
  <path class="arrow" d="M260,145 L320,145" stroke="#6b7280" stroke-width="2"/>
  <path class="arrow" d="M200,190 L200,240" stroke="#6b7280" stroke-width="2"/>
  <path class="arrow" d="M280,290 L320,290" stroke="#6b7280" stroke-width="2"/>
  <path class="arrow" d="M190,340 L190,400" stroke="#6b7280" stroke-width="2"/>
  <path class="arrow" d="M340,455 L740,455" stroke="#6b7280" stroke-width="2"/>
  <path class="arrow" d="M990,440 L1020,440" stroke="#6b7280" stroke-width="2"/>
  <path class="arrow" d="M1130,500 L1120,560" stroke="#6b7280" stroke-width="2"/>
  <path class="arrow" d="M965,615 L1000,615" stroke="#6b7280" stroke-width="2"/>
  <path class="arrow" d="M1120,615 L1120,540" stroke="#6b7280" stroke-width="2"/>

  <!-- Notes -->
  <g transform="translate(40,640)">
    <rect class="box" width="930" height="112" fill="#ffffff" stroke="#e5e7eb"/>
    <text class="label" x="16" y="32">Key Improvements</text>
    <text class="small" x="16" y="56">• SQS worker smooths bursts; DLQ provides resilience</text>
    <text class="small" x="16" y="76">• Pre-analysis delay + jitter and exponential backoff reduce Bedrock throttling</text>
    <text class="small" x="16" y="96">• Model is configurable per invocation (Haiku/Sonnet)</text>
  </g>
</svg>
